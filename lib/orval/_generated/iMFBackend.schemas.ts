/**
 * Generated by orval v7.11.2 üç∫
 * Do not edit manually.
 * IMF Backend
 * IMF Backend
 * OpenAPI spec version: 0.1.0
 */
export interface BodyGetTokenApiV0UsersLoginUserIdTestPost {
  /** Ïú†Ï†Ä ID */
  user_id: number;
}

export interface BodyUploadUserProfileImageApiV0UsersImagesPost {
  file: Blob;
}

export interface ContactDto {
  phoneNumber: string;
  status: InvitationStatus;
}

export interface ContactListResponse {
  code: number;
  message: string;
  data: ContactDto[];
}

export type ContactMethod = (typeof ContactMethod)[keyof typeof ContactMethod];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ContactMethod = {
  PHONE: "PHONE",
  KAKAO: "KAKAO",
  INSTAGRAM: "INSTAGRAM",
} as const;

export interface CreateContactRequest {
  phoneNumber: string;
}

export interface CreateContactResponse {
  code: number;
  message: string;
  data: boolean;
}

export interface HTTPValidationError {
  detail?: ValidationError[];
}

export type InvitationStatus =
  (typeof InvitationStatus)[keyof typeof InvitationStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const InvitationStatus = {
  IN_PROGRESS: "IN_PROGRESS",
  COMPLETED: "COMPLETED",
} as const;

export interface LoginResponseData {
  token: string;
}

export type MatchDetailDtoHobby = string | null;

export type MatchDetailDtoWanted = string | null;

export type MatchDetailDtoMbti = string | null;

export type MatchDetailDtoPersonality = string | null;

export type MatchDetailDtoReligion = string | null;

export type MatchDetailDtoIsSmoked = boolean | null;

export type MatchDetailDtoDrink = string | null;

export type MatchDetailDtoSchool = string | null;

export type MatchDetailDtoCompany = string | null;

export type MatchDetailDtoContact = string | null;

export interface MatchDetailDto {
  imageList: string[];
  name: string;
  height: number;
  birth: string;
  job: string;
  residence: string;
  activeArea: string;
  hobby?: MatchDetailDtoHobby;
  wanted?: MatchDetailDtoWanted;
  mbti?: MatchDetailDtoMbti;
  personality?: MatchDetailDtoPersonality;
  religion?: MatchDetailDtoReligion;
  isSmoked?: MatchDetailDtoIsSmoked;
  drink?: MatchDetailDtoDrink;
  school?: MatchDetailDtoSchool;
  company?: MatchDetailDtoCompany;
  contact?: MatchDetailDtoContact;
  contactType: string;
  status: MatchDetailStatus;
}

export interface MatchDetailResponse {
  code: number;
  message: string;
  data: MatchDetailDto;
}

export type MatchDetailStatus =
  (typeof MatchDetailStatus)[keyof typeof MatchDetailStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const MatchDetailStatus = {
  MATCH: "MATCH",
  RECEIVED: "RECEIVED",
  SENT: "SENT",
  RECOMMEND: "RECOMMEND",
} as const;

export interface MatchDto {
  matchId: number;
  user: MatchUserProfileDto;
  createdAt: string;
}

export interface MatchListResponse {
  code: number;
  message: string;
  data: MatchDto[];
}

export type MatchQueryString =
  (typeof MatchQueryString)[keyof typeof MatchQueryString];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const MatchQueryString = {
  MATCH: "MATCH",
  RECEIVED: "RECEIVED",
  SENT: "SENT",
} as const;

export interface MatchUserProfileDto {
  profileImage: string;
  birth: string;
  job: string;
}

export interface MatchingRespondRequest {
  isMatched: boolean;
}

export interface MatchingSettingRequest {
  introduction: boolean;
}

export interface RequestImgThumbnail {
  profileImgId: number;
}

export interface RequestSignupDto {
  verificationNumber: string;
  phoneNumber: string;
  introduction: boolean;
}

export interface RequestVerficationCode {
  phoneNumber: string;
}

export interface RequestVerificationDto {
  phoneNumber: string;
  verificationNumber: string;
}

export interface ResponseBaseModel {
  code: number;
  message: string;
}

export interface ResponseImgList {
  code: number;
  message: string;
  data: UserProfileImageDto[];
}

export interface ResponseLogin {
  code: number;
  message: string;
  data: LoginResponseData;
}

export interface ResponseSingleImg {
  code: number;
  message: string;
  data: UserProfileImageDto;
}

export interface ResponseUserContact {
  code: number;
  message: string;
  data: UserContactDto;
}

export interface ResponseUserInfo {
  code: number;
  message: string;
  data: UserInfoDto;
}

export interface ResponseUserMatchingSetting {
  code: number;
  message: string;
  data: UserMatchingSetting;
}

export interface ResponseUserProfile {
  code: number;
  message: string;
  data: UserProfileDto;
}

export interface ResponseVerifcationCode {
  code: number;
  message: string;
  data: VerifcationCodeDto;
}

export interface UserContactDto {
  contactType: ContactMethod;
  contact: string;
}

export type UserInfoDtoPhoneNumber = string | null;

export interface UserInfoDto {
  isVerified: boolean;
  displayList: boolean;
  ticketAmount: number;
  phoneNumber?: UserInfoDtoPhoneNumber;
  isProfile: boolean;
}

export interface UserMatchingSetting {
  status: boolean;
}

export type UserProfileDtoAddtionalDataAnyOf = { [key: string]: unknown };

export type UserProfileDtoAddtionalData =
  UserProfileDtoAddtionalDataAnyOf | null;

export interface UserProfileDto {
  name: string;
  height: number;
  birth: string;
  gender: string;
  job: string;
  residenceProvince: string;
  residenceDistrict: string;
  activeProvince: string;
  activeDistrict: string;
  addtionalData?: UserProfileDtoAddtionalData;
}

export type UserProfileImageDtoIsThumbnail = boolean | null;

export interface UserProfileImageDto {
  profileImgId: number;
  profileImgUrl: string;
  isThumbnail?: UserProfileImageDtoIsThumbnail;
}

export type UserProfileUpdateDtoName = string | null;

export type UserProfileUpdateDtoHeight = number | null;

export type UserProfileUpdateDtoBirth = string | null;

export type UserProfileUpdateDtoGender = string | null;

export type UserProfileUpdateDtoJob = string | null;

export type UserProfileUpdateDtoResidenceProvince = string | null;

export type UserProfileUpdateDtoResidenceDistrict = string | null;

export type UserProfileUpdateDtoActiveProvince = string | null;

export type UserProfileUpdateDtoActiveDistrict = string | null;

export type UserProfileUpdateDtoAdditionalDataAnyOf = { [key: string]: string };

export type UserProfileUpdateDtoAdditionalData =
  UserProfileUpdateDtoAdditionalDataAnyOf | null;

export interface UserProfileUpdateDto {
  name?: UserProfileUpdateDtoName;
  height?: UserProfileUpdateDtoHeight;
  birth?: UserProfileUpdateDtoBirth;
  gender?: UserProfileUpdateDtoGender;
  job?: UserProfileUpdateDtoJob;
  residenceProvince?: UserProfileUpdateDtoResidenceProvince;
  residenceDistrict?: UserProfileUpdateDtoResidenceDistrict;
  activeProvince?: UserProfileUpdateDtoActiveProvince;
  activeDistrict?: UserProfileUpdateDtoActiveDistrict;
  additionalData?: UserProfileUpdateDtoAdditionalData;
}

export type ValidationErrorLocItem = string | number;

export interface ValidationError {
  loc: ValidationErrorLocItem[];
  msg: string;
  type: string;
}

export interface VerifcationCodeDto {
  status: boolean;
  deadline: string;
}

export interface VerificationResultDto {
  status: boolean;
}

export interface VerificationResultResponse {
  code: number;
  message: string;
  data: VerificationResultDto;
}

export type GetMatchListApiV0MatchGetParams = {
  type: MatchQueryString;
};

export type CheckContactNumberApiV0ContactCheckGetParams = {
  phoneNumber: string;
};

export type OauthCallbackApiV0AuthProviderCallbackGetParams = {
  code: string;
  state: string;
};

export type HealthCheckHealthGet200 = { [key: string]: string };
